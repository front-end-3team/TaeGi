{"ast":null,"code":"import { faker } from \"@faker-js/faker\";\nimport shortId from \"shortid\";\nexport const MockPosts = count => Array(count).fill().map(() => ({\n  id: shortId.generate(),\n  title: faker.lorem.sentence(),\n  content: faker.lorem.paragraph(),\n  User: {\n    id: shortId.generate(),\n    nickName: faker.name.firstName(),\n    profileImg: faker.image.image()\n  },\n  Post_img: Array(Math.floor(Math.random() * 3) + 1).fill().map(() => faker.image.imageUrl()),\n  Comments: Array(Math.floor(Math.random() * 5) + 1).fill().map(() => {\n    return {\n      id: shortId.generate(),\n      content: faker.lorem.sentence(),\n      User: {\n        id: shortId.generate(),\n        nickName: faker.name.firstName(),\n        profileImg: faker.image.image()\n      },\n      myComment: false,\n      createdAt: faker.date.between(\"2023-01-01T00:00:00.000Z\", \"2023-01-31T00:00:00.000Z\")\n    };\n  }),\n  createdAt: faker.date.between(\"2023-01-01T00:00:00.000Z\", \"2023-01-31T00:00:00.000Z\"),\n  myPost: false\n}));\n_c = MockPosts;\nvar _c;\n$RefreshReg$(_c, \"MockPosts\");","map":{"version":3,"names":["faker","shortId","MockPosts","count","Array","fill","map","id","generate","title","lorem","sentence","content","paragraph","User","nickName","name","firstName","profileImg","image","Post_img","Math","floor","random","imageUrl","Comments","myComment","createdAt","date","between","myPost","_c","$RefreshReg$"],"sources":["/Users/kimtaegi/Desktop/Git_taegi/react/GlobalTest/src/__mock__/mockPosts.js"],"sourcesContent":["import { faker } from \"@faker-js/faker\";\nimport shortId from \"shortid\";\n\nexport const MockPosts = (count) =>\n  Array(count)\n    .fill()\n    .map(() => ({\n      id: shortId.generate(),\n      title: faker.lorem.sentence(),\n      content: faker.lorem.paragraph(),\n      User: {\n        id: shortId.generate(),\n        nickName: faker.name.firstName(),\n        profileImg: faker.image.image(),\n      },\n      Post_img: Array(Math.floor(Math.random() * 3) + 1)\n        .fill()\n        .map(() => faker.image.imageUrl()),\n      Comments: Array(Math.floor(Math.random() * 5) + 1)\n        .fill()\n        .map(() => {\n          return {\n            id: shortId.generate(),\n            content: faker.lorem.sentence(),\n            User: {\n              id: shortId.generate(),\n              nickName: faker.name.firstName(),\n              profileImg: faker.image.image(),\n            },\n\n            myComment: false,\n            createdAt: faker.date.between(\n              \"2023-01-01T00:00:00.000Z\",\n              \"2023-01-31T00:00:00.000Z\"\n            ),\n          };\n        }),\n      createdAt: faker.date.between(\n        \"2023-01-01T00:00:00.000Z\",\n        \"2023-01-31T00:00:00.000Z\"\n      ),\n      myPost: false,\n    }));\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,iBAAiB;AACvC,OAAOC,OAAO,MAAM,SAAS;AAE7B,OAAO,MAAMC,SAAS,GAAIC,KAAK,IAC7BC,KAAK,CAACD,KAAK,CAAC,CACTE,IAAI,EAAE,CACNC,GAAG,CAAC,OAAO;EACVC,EAAE,EAAEN,OAAO,CAACO,QAAQ,EAAE;EACtBC,KAAK,EAAET,KAAK,CAACU,KAAK,CAACC,QAAQ,EAAE;EAC7BC,OAAO,EAAEZ,KAAK,CAACU,KAAK,CAACG,SAAS,EAAE;EAChCC,IAAI,EAAE;IACJP,EAAE,EAAEN,OAAO,CAACO,QAAQ,EAAE;IACtBO,QAAQ,EAAEf,KAAK,CAACgB,IAAI,CAACC,SAAS,EAAE;IAChCC,UAAU,EAAElB,KAAK,CAACmB,KAAK,CAACA,KAAK;EAC/B,CAAC;EACDC,QAAQ,EAAEhB,KAAK,CAACiB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAC/ClB,IAAI,EAAE,CACNC,GAAG,CAAC,MAAMN,KAAK,CAACmB,KAAK,CAACK,QAAQ,EAAE,CAAC;EACpCC,QAAQ,EAAErB,KAAK,CAACiB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAC/ClB,IAAI,EAAE,CACNC,GAAG,CAAC,MAAM;IACT,OAAO;MACLC,EAAE,EAAEN,OAAO,CAACO,QAAQ,EAAE;MACtBI,OAAO,EAAEZ,KAAK,CAACU,KAAK,CAACC,QAAQ,EAAE;MAC/BG,IAAI,EAAE;QACJP,EAAE,EAAEN,OAAO,CAACO,QAAQ,EAAE;QACtBO,QAAQ,EAAEf,KAAK,CAACgB,IAAI,CAACC,SAAS,EAAE;QAChCC,UAAU,EAAElB,KAAK,CAACmB,KAAK,CAACA,KAAK;MAC/B,CAAC;MAEDO,SAAS,EAAE,KAAK;MAChBC,SAAS,EAAE3B,KAAK,CAAC4B,IAAI,CAACC,OAAO,CAC3B,0BAA0B,EAC1B,0BAA0B;IAE9B,CAAC;EACH,CAAC,CAAC;EACJF,SAAS,EAAE3B,KAAK,CAAC4B,IAAI,CAACC,OAAO,CAC3B,0BAA0B,EAC1B,0BAA0B,CAC3B;EACDC,MAAM,EAAE;AACV,CAAC,CAAC,CAAC;AAACC,EAAA,GAvCK7B,SAAS;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}