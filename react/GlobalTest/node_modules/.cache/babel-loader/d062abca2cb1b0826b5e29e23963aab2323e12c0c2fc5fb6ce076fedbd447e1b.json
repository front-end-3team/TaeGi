{"ast":null,"code":"var _jsxFileName = \"/Users/kimtaegi/Desktop/Git_taegi/react/GlobalTest/src/domain/2_context/components/pages/Q2.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport NavigateButton from \"../../../../components/NavigateButton\";\nimport ContextQ2Form from \"../atom/Q2/Form\";\nimport ContextQ2Form3 from \"../atom/Q2/Form3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ContextQ2Page = () => {\n  _s();\n  /*\n    문제 2 - 2\n      1. Form1에서 값을 입력하면 userList에 데이터가 추가되도록 구현해보세요\n      2. Form2에서 버튼을 클릭하면 userList의 각 요소에 isEdit: true의 속성이 추가되도록 구현해보세요\n      3. Form3에서 reset 버튼을 클릭하면 userList를 초기화 시키도록 구현해보세요\n      4. 제출 버튼을 누르면 isEdit true인 userList만 console.log로 출력해보세요\n        (단, isEdit이 true인 데이터도 전역으로 관리해주세요.)\n  */\n\n  const [userList, setUserList] = useState([{\n    id: 1,\n    name: \"홍길동\",\n    nickname: \"히히\"\n  }]);\n\n  /*\n    단, userList 상태 관리는 전역으로 관리하고 비즈니스 로직도 분리하기 위해\n    useReducer, useContext를 사용하여 구현해보세요\n     (일반 state를 사용하는 문제가 아니기 때문에 전역으로 상태관리를 할 수 있도록 해주세요)\n     관련 로직은 src/store/3_context.js에 구현해주세요\n  */\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uBB38\\uC81C 2 - 2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContextQ2Form, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContextQ2Form3, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"32px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"SUBMIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavigateButton, {\n      to: \"/3_redux/q1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ContextQ2Page, \"fTKp+WQg3U+21O2n4NkIhdB7vFU=\");\n_c = ContextQ2Page;\nexport default ContextQ2Page;\nvar _c;\n$RefreshReg$(_c, \"ContextQ2Page\");","map":{"version":3,"names":["useState","NavigateButton","ContextQ2Form","ContextQ2Form3","jsxDEV","_jsxDEV","Fragment","_Fragment","ContextQ2Page","_s","userList","setUserList","id","name","nickname","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginTop","to","_c","$RefreshReg$"],"sources":["/Users/kimtaegi/Desktop/Git_taegi/react/GlobalTest/src/domain/2_context/components/pages/Q2.js"],"sourcesContent":["import { useState } from \"react\";\nimport NavigateButton from \"../../../../components/NavigateButton\";\nimport ContextQ2Form from \"../atom/Q2/Form\";\nimport ContextQ2Form3 from \"../atom/Q2/Form3\";\n\nconst ContextQ2Page = () => {\n  /*\n    문제 2 - 2\n      1. Form1에서 값을 입력하면 userList에 데이터가 추가되도록 구현해보세요\n      2. Form2에서 버튼을 클릭하면 userList의 각 요소에 isEdit: true의 속성이 추가되도록 구현해보세요\n      3. Form3에서 reset 버튼을 클릭하면 userList를 초기화 시키도록 구현해보세요\n      4. 제출 버튼을 누르면 isEdit true인 userList만 console.log로 출력해보세요\n        (단, isEdit이 true인 데이터도 전역으로 관리해주세요.)\n  */\n\n  const [userList, setUserList] = useState([\n    { id: 1, name: \"홍길동\", nickname: \"히히\" },\n  ]);\n\n  /*\n    단, userList 상태 관리는 전역으로 관리하고 비즈니스 로직도 분리하기 위해\n    useReducer, useContext를 사용하여 구현해보세요\n\n    (일반 state를 사용하는 문제가 아니기 때문에 전역으로 상태관리를 할 수 있도록 해주세요)\n\n    관련 로직은 src/store/3_context.js에 구현해주세요\n  */\n\n  return (\n    <>\n      <h2>문제 2 - 2</h2>\n      <ContextQ2Form />\n      <ContextQ2Form3 />\n      <div\n        style={{\n          marginTop: \"32px\",\n        }}\n      >\n        <button>SUBMIT</button>\n      </div>\n      <NavigateButton to={\"/3_redux/q1\"} />\n    </>\n  );\n};\nexport default ContextQ2Page;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,cAAc,MAAM,uCAAuC;AAClE,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,CACvC;IAAEY,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,KAAK;IAAEC,QAAQ,EAAE;EAAK,CAAC,CACvC,CAAC;;EAEF;AACF;AACA;AACA;AACA;AACA;;EAIE,oBACET,OAAA,CAAAE,SAAA;IAAAQ,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACjBd,OAAA,CAACH,aAAa;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACjBd,OAAA,CAACF,cAAc;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAClBd,OAAA;MACEe,KAAK,EAAE;QACLC,SAAS,EAAE;MACb,CAAE;MAAAN,QAAA,eAEFV,OAAA;QAAAU,QAAA,EAAQ;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAS;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnB,eACNd,OAAA,CAACJ,cAAc;MAACqB,EAAE,EAAE;IAAc;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA,gBACpC;AAEP,CAAC;AAACV,EAAA,CAtCID,aAAa;AAAAe,EAAA,GAAbf,aAAa;AAuCnB,eAAeA,aAAa;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}