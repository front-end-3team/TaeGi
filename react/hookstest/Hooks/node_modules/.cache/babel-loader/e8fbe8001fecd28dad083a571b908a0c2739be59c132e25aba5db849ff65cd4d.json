{"ast":null,"code":"var _jsxFileName = \"/Users/kimtaegi/Desktop/Git_taegi/react/hookstest/Hooks/src/hooks/2.state/state1.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport PlayListMock from \"../../__mock__/playList.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction State1() {\n  _s();\n  /*\r\n  문제 1.\r\n  state를 다루기 위한 기초 문제입니다.\r\n  음악 목록 10가지의 mock data가 있습니다.\r\n  아래에 추가버튼을 눌러 목록에 리스트를 추가하고\r\n  삭제 버턴을 눌렀을 때 데이터가 삭제될 수 있도록 해주세요\r\n  */\n  const titleValue = useRef();\n  const singerValue = useRef();\n  const [useplayList, setPlayList] = useState(PlayListMock.playlist);\n  /*데이터 콘솔에 찍어두었으니 확인해볼 것 */\n  const onClickRemove = _ref => {\n    let {\n      titleValue\n    } = _ref;\n  };\n  const onClickAdd = () => {\n    setPlayList(PlayListMock.playlist.push({\n      title: titleValue.current.value,\n      signer: singerValue.current.value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uBB38\\uC81C1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: PlayListMock.playlist.map(playlist => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: playlist.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: playlist.signer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClickRemove,\n          title: titleValue,\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uACE1\\uBA85 : \", /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: titleValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uAC00\\uC218/\\uC791\\uACE1 : \", /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: singerValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClickAdd,\n          children: \"\\uCD94\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(State1, \"KZGdAFRsp3Hv0iU0oMmcgjQ3RvI=\");\n_c = State1;\nexport default State1;\nvar _c;\n$RefreshReg$(_c, \"State1\");","map":{"version":3,"names":["useRef","useState","PlayListMock","State1","titleValue","singerValue","useplayList","setPlayList","playlist","onClickRemove","onClickAdd","push","title","current","value","signer","map"],"sources":["/Users/kimtaegi/Desktop/Git_taegi/react/hookstest/Hooks/src/hooks/2.state/state1.js"],"sourcesContent":["import { useRef, useState } from \"react\";\r\nimport PlayListMock from \"../../__mock__/playList.json\";\r\n\r\nfunction State1() {\r\n    /*\r\n    문제 1.\r\n    state를 다루기 위한 기초 문제입니다.\r\n    음악 목록 10가지의 mock data가 있습니다.\r\n    아래에 추가버튼을 눌러 목록에 리스트를 추가하고\r\n    삭제 버턴을 눌렀을 때 데이터가 삭제될 수 있도록 해주세요\r\n  */\r\n    const titleValue = useRef();\r\n    const singerValue = useRef();\r\n\r\n    const [useplayList, setPlayList] = useState(PlayListMock.playlist);\r\n    /*데이터 콘솔에 찍어두었으니 확인해볼 것 */\r\n    const onClickRemove = ({ titleValue }) => {};\r\n    const onClickAdd = () => {\r\n        setPlayList(\r\n            PlayListMock.playlist.push({\r\n                title: titleValue.current.value,\r\n                signer: singerValue.current.value,\r\n            })\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h1>문제1</h1>\r\n            <ul>\r\n                {PlayListMock.playlist.map((playlist) => (\r\n                    <li>\r\n                        <h3>{playlist.title}</h3>\r\n                        <p>{playlist.signer}</p>\r\n                        <button onClick={onClickRemove} title={titleValue}>\r\n                            삭제\r\n                        </button>\r\n                        <hr />\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <div>\r\n                <p>\r\n                    곡명 : <input ref={titleValue} />\r\n                </p>\r\n                <p>\r\n                    가수/작곡 : <input ref={singerValue} />\r\n                </p>\r\n                <p>\r\n                    <button onClick={onClickAdd}>추가</button>\r\n                </p>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default State1;\r\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACxC,OAAOC,YAAY,MAAM,8BAA8B;AAAC;AAAA;AAExD,SAASC,MAAM,GAAG;EAAA;EACd;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,MAAMC,UAAU,GAAGJ,MAAM,EAAE;EAC3B,MAAMK,WAAW,GAAGL,MAAM,EAAE;EAE5B,MAAM,CAACM,WAAW,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAACC,YAAY,CAACM,QAAQ,CAAC;EAClE;EACA,MAAMC,aAAa,GAAG,QAAoB;IAAA,IAAnB;MAAEL;IAAW,CAAC;EAAM,CAAC;EAC5C,MAAMM,UAAU,GAAG,MAAM;IACrBH,WAAW,CACPL,YAAY,CAACM,QAAQ,CAACG,IAAI,CAAC;MACvBC,KAAK,EAAER,UAAU,CAACS,OAAO,CAACC,KAAK;MAC/BC,MAAM,EAAEV,WAAW,CAACQ,OAAO,CAACC;IAChC,CAAC,CAAC,CACL;EACL,CAAC;EAED,oBACI;IAAA,wBACI;MAAA,UAAI;IAAG;MAAA;MAAA;MAAA;IAAA,QAAK,eACZ;MAAA,UACKZ,YAAY,CAACM,QAAQ,CAACQ,GAAG,CAAER,QAAQ,iBAChC;QAAA,wBACI;UAAA,UAAKA,QAAQ,CAACI;QAAK;UAAA;UAAA;UAAA;QAAA,QAAM,eACzB;UAAA,UAAIJ,QAAQ,CAACO;QAAM;UAAA;UAAA;UAAA;QAAA,QAAK,eACxB;UAAQ,OAAO,EAAEN,aAAc;UAAC,KAAK,EAAEL,UAAW;UAAA,UAAC;QAEnD;UAAA;UAAA;UAAA;QAAA,QAAS,eACT;UAAA;UAAA;UAAA;QAAA,QAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QAEb;IAAC;MAAA;MAAA;MAAA;IAAA,QACD,eACL;MAAA,wBACI;QAAA,WAAG,iBACM;UAAO,GAAG,EAAEA;QAAW;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAC/B,eACJ;QAAA,WAAG,8BACS;UAAO,GAAG,EAAEC;QAAY;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACnC,eACJ;QAAA,uBACI;UAAQ,OAAO,EAAEK,UAAW;UAAA,UAAC;QAAE;UAAA;UAAA;UAAA;QAAA;MAAS;QAAA;QAAA;QAAA;MAAA,QACxC;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EAAA,gBACP;AAEX;AAAC,GAnDQP,MAAM;AAAA,KAANA,MAAM;AAoDf,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}