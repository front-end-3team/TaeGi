{"ast":null,"code":"var _jsxFileName = \"/Users/kimtaegi/Desktop/Git_taegi/react/hookstest/Hooks/src/hooks/2.state/state1.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport PlayListMock from \"../../__mock__/playList.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction State1() {\n  _s();\n  /* \r\n  문제 1.\r\n    state를 다루기 위한 기초 문제입니다.\r\n  음악 목록 10가지의 mock data가 있습니다.\r\n    아래에 추가버튼을 눌러 목록에 리스트를 추가하고 \r\n  삭제 버턴을 눌렀을 때 데이터가 삭제될 수 있도록 해주세요\r\n  */\n  /* 데이터 콘솔에 찍어두었으니 확인해볼 것 */\n  console.log(PlayListMock.playlist);\n  const [inputValue, setInputValue] = useState();\n  //추가\n  const onClickList = () => {};\n  const onChangeInput = el => {\n    console.log(el.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uBB38\\uC81C1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: PlayListMock.playlist.map(el => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: el.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: el.signer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uACE1\\uBA85 : \", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: onChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uAC00\\uC218/\\uC791\\uACE1 : \", /*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClickList,\n          children: \"\\uCD94\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(State1, \"eFo9HBIbuwdKZGVz1T9mjJFQt1U=\");\n_c = State1;\nexport default State1;\nvar _c;\n$RefreshReg$(_c, \"State1\");","map":{"version":3,"names":["useState","PlayListMock","State1","console","log","playlist","inputValue","setInputValue","onClickList","onChangeInput","el","target","value","map","title","signer"],"sources":["/Users/kimtaegi/Desktop/Git_taegi/react/hookstest/Hooks/src/hooks/2.state/state1.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport PlayListMock from \"../../__mock__/playList.json\";\r\n\r\nfunction State1() {\r\n    /* \r\n    문제 1.\r\n\r\n    state를 다루기 위한 기초 문제입니다.\r\n    음악 목록 10가지의 mock data가 있습니다.\r\n\r\n    아래에 추가버튼을 눌러 목록에 리스트를 추가하고 \r\n    삭제 버턴을 눌렀을 때 데이터가 삭제될 수 있도록 해주세요\r\n  */\r\n    /* 데이터 콘솔에 찍어두었으니 확인해볼 것 */\r\n    console.log(PlayListMock.playlist);\r\n    const [inputValue, setInputValue] = useState();\r\n    //추가\r\n    const onClickList = () => {};\r\n    const onChangeInput = (el) => {\r\n        console.log(el.target.value);\r\n    };\r\n    return (\r\n        <>\r\n            <h1>문제1</h1>\r\n            <ul>\r\n                {PlayListMock.playlist.map((el) => (\r\n                    <li>\r\n                        <h3>{el.title}</h3>\r\n                        <p>{el.signer}</p>\r\n                        <hr />\r\n                    </li>\r\n                ))}\r\n                {/* list */}\r\n                {/* 예시 데이터입니다 */}\r\n                {/* <li>\r\n                    <h3>Summer</h3>\r\n                    <p>Joe Hisaishi</p>\r\n                </li> */}\r\n            </ul>\r\n            <div>\r\n                <p>\r\n                    곡명 : <input onChange={onChangeInput} />\r\n                </p>\r\n                <p>\r\n                    가수/작곡 : <input />\r\n                </p>\r\n                <p>\r\n                    <button onClick={onClickList}>추가</button>\r\n                    <button>삭제</button>\r\n                </p>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default State1;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,YAAY,MAAM,8BAA8B;AAAC;AAAA;AAExD,SAASC,MAAM,GAAG;EAAA;EACd;AACJ;AACA;AACA;AACA;AACA;AACA;EAGI;EACAC,OAAO,CAACC,GAAG,CAACH,YAAY,CAACI,QAAQ,CAAC;EAClC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,EAAE;EAC9C;EACA,MAAMQ,WAAW,GAAG,MAAM,CAAC,CAAC;EAC5B,MAAMC,aAAa,GAAIC,EAAE,IAAK;IAC1BP,OAAO,CAACC,GAAG,CAACM,EAAE,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EACD,oBACI;IAAA,wBACI;MAAA,UAAI;IAAG;MAAA;MAAA;MAAA;IAAA,QAAK,eACZ;MAAA,UACKX,YAAY,CAACI,QAAQ,CAACQ,GAAG,CAAEH,EAAE,iBAC1B;QAAA,wBACI;UAAA,UAAKA,EAAE,CAACI;QAAK;UAAA;UAAA;UAAA;QAAA,QAAM,eACnB;UAAA,UAAIJ,EAAE,CAACK;QAAM;UAAA;UAAA;UAAA;QAAA,QAAK,eAClB;UAAA;UAAA;UAAA;QAAA,QAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QAEb;IAAC;MAAA;MAAA;MAAA;IAAA,QAOD,eACL;MAAA,wBACI;QAAA,WAAG,iBACM;UAAO,QAAQ,EAAEN;QAAc;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACvC,eACJ;QAAA,WAAG,8BACS;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QACjB,eACJ;QAAA,wBACI;UAAQ,OAAO,EAAED,WAAY;UAAA,UAAC;QAAE;UAAA;UAAA;UAAA;QAAA,QAAS,eACzC;UAAA,UAAQ;QAAE;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QACnB;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EAAA,gBACP;AAEX;AAAC,GAlDQN,MAAM;AAAA,KAANA,MAAM;AAmDf,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}