[{"/Users/kimtaegi/Desktop/Git_taegi/react/hookstest/Hooks/src/index.js":"1","/Users/kimtaegi/Desktop/Git_taegi/react/hookstest/Hooks/src/App.js":"2","/Users/kimtaegi/Desktop/Git_taegi/react/hookstest/Hooks/src/reportWebVitals.js":"3","/Users/kimtaegi/Desktop/Git_taegi/react/hookstest/Hooks/src/pages/Hooks.js":"4","/Users/kimtaegi/Desktop/Git_taegi/react/hookstest/Hooks/src/pages/Detail.js":"5","/Users/kimtaegi/Desktop/Git_taegi/react/hookstest/Hooks/src/pages/State.js":"6","/Users/kimtaegi/Desktop/Git_taegi/react/hookstest/Hooks/src/hooks/1.basic/q3.js":"7","/Users/kimtaegi/Desktop/Git_taegi/react/hookstest/Hooks/src/hooks/1.basic/q1.js":"8","/Users/kimtaegi/Desktop/Git_taegi/react/hookstest/Hooks/src/hooks/2.state/state2.js":"9","/Users/kimtaegi/Desktop/Git_taegi/react/hookstest/Hooks/src/hooks/2.state/state3.js":"10","/Users/kimtaegi/Desktop/Git_taegi/react/hookstest/Hooks/src/hooks/2.state/state1.js":"11","/Users/kimtaegi/Desktop/Git_taegi/react/hookstest/Hooks/src/hooks/1.basic/q2.js":"12","/Users/kimtaegi/Desktop/Git_taegi/react/hookstest/Hooks/src/components/1.basic/q3components.js":"13","/Users/kimtaegi/Desktop/Git_taegi/react/hookstest/Hooks/src/components/2.state/product.js":"14","/Users/kimtaegi/Desktop/Git_taegi/react/hookstest/Hooks/src/components/2.state/comment.js":"15"},{"size":543,"mtime":1676825547894,"results":"16","hashOfConfig":"17"},{"size":607,"mtime":1676453566000,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1676150996000,"results":"19","hashOfConfig":"17"},{"size":644,"mtime":1676438834000,"results":"20","hashOfConfig":"17"},{"size":608,"mtime":1676438894000,"results":"21","hashOfConfig":"17"},{"size":545,"mtime":1676438929000,"results":"22","hashOfConfig":"17"},{"size":1673,"mtime":1676796130251,"results":"23","hashOfConfig":"17"},{"size":2825,"mtime":1676698022483,"results":"24","hashOfConfig":"17"},{"size":4972,"mtime":1677077985017,"results":"25","hashOfConfig":"17"},{"size":2329,"mtime":1677053776107,"results":"26","hashOfConfig":"17"},{"size":1644,"mtime":1676870496857,"results":"27","hashOfConfig":"17"},{"size":2839,"mtime":1676818406793,"results":"28","hashOfConfig":"17"},{"size":472,"mtime":1676812084258,"results":"29","hashOfConfig":"17"},{"size":543,"mtime":1677055078120,"results":"30","hashOfConfig":"17"},{"size":2644,"mtime":1677078068977,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"4g7nm3",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"35"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"35"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"35"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/kimtaegi/Desktop/Git_taegi/react/hookstest/Hooks/src/index.js",[],[],[],"/Users/kimtaegi/Desktop/Git_taegi/react/hookstest/Hooks/src/App.js",[],[],"/Users/kimtaegi/Desktop/Git_taegi/react/hookstest/Hooks/src/reportWebVitals.js",[],[],"/Users/kimtaegi/Desktop/Git_taegi/react/hookstest/Hooks/src/pages/Hooks.js",[],[],"/Users/kimtaegi/Desktop/Git_taegi/react/hookstest/Hooks/src/pages/Detail.js",[],[],"/Users/kimtaegi/Desktop/Git_taegi/react/hookstest/Hooks/src/pages/State.js",[],[],"/Users/kimtaegi/Desktop/Git_taegi/react/hookstest/Hooks/src/hooks/1.basic/q3.js",[],[],"/Users/kimtaegi/Desktop/Git_taegi/react/hookstest/Hooks/src/hooks/1.basic/q1.js",[],[],"/Users/kimtaegi/Desktop/Git_taegi/react/hookstest/Hooks/src/hooks/2.state/state2.js",["81"],[],"/Users/kimtaegi/Desktop/Git_taegi/react/hookstest/Hooks/src/hooks/2.state/state3.js",["82","83"],[],"/Users/kimtaegi/Desktop/Git_taegi/react/hookstest/Hooks/src/hooks/2.state/state1.js",["84"],[],"import { useState } from \"react\";\r\n\r\nimport PlayListMock from \"../../__mock__/playList.json\";\r\n\r\nfunction State1() {\r\n    const [list, setList] = useState(PlayListMock.playlist);\r\n    const [title, setTitle] = useState();\r\n    const [singer, setSinger] = useState();\r\n    const [state, setState] = useState(false);\r\n\r\n    const onChangeTitle = (el) => {\r\n        setTitle(el.target.value);\r\n    };\r\n    const onChangeSinger = (el) => {\r\n        setSinger(el.target.value);\r\n    };\r\n    const onClickAddList = (el) => {\r\n        list.push({ title: title, signer: singer });\r\n        setState((prev) => !prev);\r\n    };\r\n    const removeTitle = (title) => {\r\n        setList(list.filter((el) => el.title !== title));\r\n        console.log(title);\r\n    };\r\n    return (\r\n        <>\r\n            <h1>문제1</h1>\r\n            <ul>\r\n                {list.map((el) => (\r\n                    <li>\r\n                        <h3>{el.title}</h3>\r\n                        <p>{el.signer}</p>\r\n                        <button onClick={() => removeTitle(el.title)}>\r\n                            삭제\r\n                        </button>\r\n                        <hr />\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <div>\r\n                <p>\r\n                    곡명 : <input onChange={onChangeTitle} />\r\n                </p>\r\n                <p>\r\n                    가수/작곡 : <input onChange={onChangeSinger} />\r\n                </p>\r\n                <p>\r\n                    <button onClick={onClickAddList}>추가</button>\r\n                </p>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default State1;\r\n","/Users/kimtaegi/Desktop/Git_taegi/react/hookstest/Hooks/src/hooks/1.basic/q2.js",["85"],[],"import { useRef, useState } from \"react\";\r\n\r\nfunction Q2() {\r\n    const [forceRender, setForceRender] = useState(false);\r\n    const [view, setView] = useState(false);\r\n    const inputChange = useRef();\r\n    const arr = useRef([]);\r\n\r\n    //2-1번\r\n\r\n    const onAddList = () => {\r\n        setForceRender((prev) => !prev);\r\n        arr.current.push({ value: inputChange.current.value });\r\n    };\r\n\r\n    const onMakeList = () => {\r\n        setView(true);\r\n    };\r\n\r\n    //2-2번\r\n    const colorChange = useRef();\r\n\r\n    const onBtnColor = () => {\r\n        colorChange.current.style = \"color : red\";\r\n    };\r\n\r\n    /* \r\n    문제2\r\n\r\n    2-1)\r\n        useRef에 관련한 문제입니다.\r\n\r\n        추가 버튼을 누르면 input에 있던 value는 배열 arr에 추가됩니다.\r\n        그러나, 추가 버튼을 누를 때마다 강제 랜더링 상태가 무조건 적으로 업데이트 됩니다.\r\n\r\n        이러한 상황에서 제출버튼을 누르면\r\n        \r\n        지금까지 추가하였던 목록 배열(arr)이 \r\n        <ul>의 li의 항목으로 추가되어야합니다.\r\n\r\n        만약 제출되었을 때 아무런 항목이 없다면\r\n        <p>제출된 목록이 없습니다</p>이 노출되어야하며\r\n\r\n        제출된 항목이 있다면\r\n        <ul>만 노출되어야 합니다\r\n\r\n        이를 useRef의 특성을 고려하여 풀이해보세요 :)\r\n\r\n    2-2)\r\n        문제 2-2는 변경 버튼을 클릭하면\r\n        p태그의 색상이 다른 색상으로 변경됩니다.\r\n        \r\n        이는 satet를 사용하는 것이 가장 올바른 방법이지만\r\n        어를 사용할 수 없는 어쩔 수 없는 상황에 놓여있습니다.\r\n\r\n        따라서 useRef는 사용하여 해당 문구의 색상을 변경해보세요 :)\r\n  */\r\n\r\n    return (\r\n        <>\r\n            <h1>문제2</h1>\r\n            <div>\r\n                <h2>문제 2-1</h2>\r\n                <p>\r\n                    <input ref={inputChange} />\r\n                </p>\r\n\r\n                <p>\r\n                    <button onClick={onAddList}>추가</button>\r\n                </p>\r\n                <p>\r\n                    <button onClick={onMakeList}>제출</button>\r\n                </p>\r\n                <ul>\r\n                    {view ? (\r\n                        arr.current.map((el) => <li>{el.value}</li>)\r\n                    ) : (\r\n                        <p>제출된 목록이 없습니다</p>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n            <div>\r\n                <h2>문제 2-2</h2>\r\n                <p ref={colorChange}>\r\n                    이 문구는 아래 버튼을 누르면 색상이 바뀝니다\r\n                </p>\r\n                <button onClick={onBtnColor}>변경</button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default Q2;\r\n","/Users/kimtaegi/Desktop/Git_taegi/react/hookstest/Hooks/src/components/1.basic/q3components.js",["86"],[],"import { useEffect } from \"react\";\r\n\r\nfunction Q3components({ count, setCount }) {\r\n    useEffect(() => {\r\n        const total = setInterval(() => {\r\n            setCount((count += 1));\r\n            console.log(\"aa\");\r\n        }, 2000);\r\n        return () => {\r\n            clearInterval(total);\r\n            setCount(0);\r\n            console.log(\"aa\");\r\n        };\r\n    }, []);\r\n\r\n    return <div>🏃‍♂️ 줄넘기 ... ing </div>;\r\n}\r\nexport default Q3components;\r\n","/Users/kimtaegi/Desktop/Git_taegi/react/hookstest/Hooks/src/components/2.state/product.js",[],[],"/Users/kimtaegi/Desktop/Git_taegi/react/hookstest/Hooks/src/components/2.state/comment.js",["87"],[],{"ruleId":"88","severity":1,"message":"89","line":1,"column":10,"nodeType":"90","messageId":"91","endLine":1,"endColumn":16},{"ruleId":"88","severity":1,"message":"92","line":4,"column":8,"nodeType":"90","messageId":"91","endLine":4,"endColumn":19},{"ruleId":"88","severity":1,"message":"93","line":72,"column":7,"nodeType":"90","messageId":"91","endLine":72,"endColumn":8},{"ruleId":"88","severity":1,"message":"94","line":9,"column":12,"nodeType":"90","messageId":"91","endLine":9,"endColumn":17},{"ruleId":"88","severity":1,"message":"95","line":4,"column":12,"nodeType":"90","messageId":"91","endLine":4,"endColumn":23},{"ruleId":"96","severity":1,"message":"97","line":6,"column":32,"nodeType":"98","endLine":6,"endColumn":33},{"ruleId":"99","severity":1,"message":"100","line":13,"column":9,"nodeType":"101","messageId":"102","endLine":23,"endColumn":10},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'productList' is defined but never used.","'S' is assigned a value but never used.","'state' is assigned a value but never used.","'forceRender' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'count' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock"]